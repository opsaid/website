<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OPSaid – 应用打包</title>
    <link>/docs/devops/packages/</link>
    <description>Recent content in 应用打包 on OPSaid</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 22 Mar 2023 11:09:25 +0800</lastBuildDate>
    
	  <atom:link href="/docs/devops/packages/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Kaniko</title>
      <link>/docs/devops/packages/kaniko/</link>
      <pubDate>Wed, 22 Mar 2023 11:10:14 +0800</pubDate>
      
      <guid>/docs/devops/packages/kaniko/</guid>
      <description>
        
        
        &lt;h2 id=&#34;简要概述&#34;&gt;简要概述&lt;/h2&gt;
&lt;p&gt;需要在容器里面构建镜像，一般有以下 3 中方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过挂载宿主的运行时 socket；&lt;/li&gt;
&lt;li&gt;通过 Docker-in-Docker 方式；&lt;/li&gt;
&lt;li&gt;使用 buildkit 工具与运行时 socket；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上方式均需要依赖后端的容器 daemon，可能还需特权模式，这样构建镜像不够便利以及可能存在安全风险。&lt;/p&gt;
&lt;p&gt;这里通过 &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;kaniko&lt;/a&gt; 在容器运行时构建镜像，而不依赖后端。&lt;/p&gt;
&lt;h2 id=&#34;镜像地址&#34;&gt;镜像地址&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;官方镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcr.io/kaniko-project/executor:v1.9.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcr.io/kaniko-project/executor:v1.9.1-slim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcr.io/kaniko-project/executor:v1.9.1-debug
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;默认镜像是 &amp;ldquo;FROM scratch&amp;rdquo;，也就是不带任何 &amp;ldquo;shell&amp;rdquo;，无法登录调试。 其他 &amp;ldquo;-slim&amp;rdquo; 是瘦身精简的镜像，而 &amp;ldquo;-debug&amp;rdquo; 是带了 &amp;ldquo;busybox&amp;rdquo; 版本的 &amp;ldquo;shell&amp;rdquo; 镜像。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;国内镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kaniko:v1.9.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kaniko:v1.9.1-slim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kaniko:v1.9.1-debug
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;国内仅同步 &amp;ldquo;linux/amd64&amp;rdquo; 架构。&lt;/p&gt;
&lt;h2 id=&#34;命令参数&#34;&gt;命令参数&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;默认值&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;build-arg&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;MY_VAR=&amp;lsquo;value with spaces&amp;rsquo;&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache&lt;/td&gt;
          &lt;td&gt;false&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache-dir&lt;/td&gt;
          &lt;td&gt;/cache&lt;/td&gt;
          &lt;td&gt;需配合参数 &amp;ldquo;&amp;ndash;cache=true&amp;rdquo; 使用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache-repo&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;需配合参数 &amp;ldquo;&amp;ndash;cache=true&amp;rdquo; 使用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache-copy-layers&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache-run-layers&lt;/td&gt;
          &lt;td&gt;true&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache-ttl&lt;/td&gt;
          &lt;td&gt;336h0m0s&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cleanup&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;完成时清理文件系统内容，不做清理的话，当前容器将会是 Dockerfile 构建后的结果&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;compressed-caching&lt;/td&gt;
          &lt;td&gt;true&lt;/td&gt;
          &lt;td&gt;压缩缓存层，以减少编译时间，但增加内存使用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;context&lt;/td&gt;
          &lt;td&gt;/workspace/&lt;/td&gt;
          &lt;td&gt;指向 Dockerfile 文件路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;context-sub-path&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;custom-platform&lt;/td&gt;
          &lt;td&gt;同宿主架构&lt;/td&gt;
          &lt;td&gt;自定义构建的架构，如：linux/adm64，类型：docker build &amp;ndash;platform&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;destination&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;构建的容器镜像全名，可添加多个，上传到指定的仓库&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;digest-file&lt;/td&gt;
          &lt;td&gt;/dev/termination-log&lt;/td&gt;
          &lt;td&gt;用于接收构建镜像的信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;dockerfile&lt;/td&gt;
          &lt;td&gt;Dockerfile&lt;/td&gt;
          &lt;td&gt;使用哪个 Dockerfile 文件构建镜像&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;force&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;force-build-metadata&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;git&lt;/td&gt;
          &lt;td&gt;branch=,single-branch=false,recurse-submodules=false&lt;/td&gt;
          &lt;td&gt;如果编译上下问来自 git 仓库&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ignore-path&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ignore-var-run&lt;/td&gt;
          &lt;td&gt;true&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;image-fs-extract-retry&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;重试次数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;image-name-tag-with-digest-file&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;image-name-with-digest-file&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;insecure&lt;/td&gt;
          &lt;td&gt;false&lt;/td&gt;
          &lt;td&gt;使用 HTTP 协议推送镜像至镜像中心&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;insecure-pull&lt;/td&gt;
          &lt;td&gt;false&lt;/td&gt;
          &lt;td&gt;使用 HTTP 协议拉取镜像&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;insecure-registry&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;使用 HTTP 协议的镜像中心列表，可添加多个&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;kaniko-dir&lt;/td&gt;
          &lt;td&gt;/kaniko&lt;/td&gt;
          &lt;td&gt;指向 kaniko 目录，优先级高于 &amp;ldquo;KANIKO_DIR&amp;rdquo; 环境变量&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;label&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;设置镜像标签&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;log-format&lt;/td&gt;
          &lt;td&gt;color&lt;/td&gt;
          &lt;td&gt;日志格式，可取：text, color, json&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;log-timestamp&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;日志时间戳&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;no-push&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;不上传至镜像中心&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;no-push-cache&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;不上传至镜像中心&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;oci-layout-path&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;存放 oci 格式的镜像路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;push-retry&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;上传镜像的重试次数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;registry-certificate&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;使用 tls 认证镜像中心&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;registry-mirror&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;用于 pull 镜像使用的 mirror，如：docker.io&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;reproducible&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;single-snapshot&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;skip-tls-verify&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;push 镜像跳过 tls 验证&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;skip-tls-verify-pull&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;pull 镜像跳过 tls 验证&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;skip-tls-verify-registry&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;对指定镜像中心跳过 tls 验证&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;skip-unused-stages&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;snapshot-mode&lt;/td&gt;
          &lt;td&gt;full&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;tar-path&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;镜像以 tar 格式保存路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;target&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;use-new-run&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;TODO;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;verbosity&lt;/td&gt;
          &lt;td&gt;info&lt;/td&gt;
          &lt;td&gt;日志级别：trace, debug, info, warn, error, fatal, panic&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;
&lt;h3 id=&#34;启动进入-shell&#34;&gt;启动进入 shell&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	-i -t &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	--rm &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	--entrypoint /bin/sh &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kaniko:v1.9.1-debug
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;构建容器镜像&#34;&gt;构建容器镜像&lt;/h3&gt;
&lt;p&gt;假设需要构建 &amp;ldquo;ccr.ccs.tencentyun.com/opsaid/test2:0.1.0&amp;rdquo; 镜像，则可使用以下指令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	-v /tmp/coding/test2:/workspace &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	-v /tmp/docker/config.json:/kaniko/.docker/config.json:ro &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kaniko:v1.9.1 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	--dockerfile /workspace/Dockerfile &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	--context /workspace &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;	--destination ccr.ccs.tencentyun.com/opsaid/test2:0.1.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;脚本分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用代码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;/workspace/Dockerfile 内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加 &amp;ldquo;ccr.ccs.tencentyun.com/opsaid&amp;rdquo; 镜像中心权限&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;见配置：/tmp/docker/config.json&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auths&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ccr.ccs.tencentyun.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;base64(username:password)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;挂载至 kaniko 容器内 &amp;ldquo;/kaniko/.docker/config.json&amp;rdquo; 地址。如果您更改了 &amp;ldquo;kaniko&amp;rdquo; 镜像，导致变量 &amp;ldquo;$HOME&amp;rdquo; 非 “/kaniko&amp;quot;，则需要更改挂载的配置，否则 &amp;ldquo;/kaniko/executer&amp;rdquo; 会无法正确读取授权文件。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Multi Arch</title>
      <link>/docs/devops/packages/multi-arch/</link>
      <pubDate>Fri, 14 Apr 2023 22:46:52 +0800</pubDate>
      
      <guid>/docs/devops/packages/multi-arch/</guid>
      <description>
        
        
        &lt;h2 id=&#34;简要概述&#34;&gt;简要概述&lt;/h2&gt;
&lt;p&gt;如何构建多架构镜像&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Fpm</title>
      <link>/docs/devops/packages/fpm/</link>
      <pubDate>Thu, 08 Dec 2022 10:46:49 +0800</pubDate>
      
      <guid>/docs/devops/packages/fpm/</guid>
      <description>
        
        
        &lt;h2 id=&#34;简要概述&#34;&gt;简要概述&lt;/h2&gt;
&lt;p&gt;实现各系统打包，如：rpm、deb 等&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jordansissel/fpm&#34;&gt;https://github.com/jordansissel/fpm&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装部署&#34;&gt;安装部署&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ubuntu 20.04 示例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install -y ruby
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gem install fpm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 打 rpm 包需要&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install rpm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 打 deb 包需要&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install binutils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@ubuntu:~# fpm --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.15.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@ubuntu:~#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;centos 7 示例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装依赖的 ruby 环境&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install -y ruby
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看 ruby 版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;root@lfheaplt gitlab-runner&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ruby --version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ruby 2.0.0p648 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;2015-12-16&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;x86_64-linux&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;root@lfheaplt gitlab-runner&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 移除默认 sources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gem &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; --remove https://rubygems.org/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 添加阿里云 sources&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gem sources -a https://mirrors.aliyun.com/rubygems/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 安装 rvm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -sSL https://get.rvm.io &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; bash -s stable
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 升级 ruby&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/local/rvm/bin/rvm install 2.7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 通过 gem 安装 fpm
gem install fpm
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;制作安装包&#34;&gt;制作安装包&lt;/h2&gt;
&lt;h3 id=&#34;rpm包&#34;&gt;RPM包&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
